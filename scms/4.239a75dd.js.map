{"version":3,"sources":["webpack:///./devTool/index.js","webpack:///./devTool/DevTool.js","webpack:///./devTool/DevMapStore.js"],"names":["__webpack_require__","createDevTool","defaultModuleMap","store","DevMapStore","DevTool","_this","this","_classCallCheck","root","document","createElement","classList","add","read","then","devMap","setup","state","active","_this2","editors","Object","keys","map","key","path","checked","innerHTML","join","attachToDom","initEvent","editor","querySelector","remove","_this3","addEventListener","_updateState","submitDevMap","resetDevMap","exitDevMode","e","target","tagName","toLowerCase","type","row","parentElement","disabled","body","appendChild","fields","querySelectorAll","forEach","call","field","assign","_defineProperty","name","value","saveMapToDB","write","history","replaceState","location","hash","window","reload","catch","err","console","warn","pushState","localforage","config","getItem","_context","t0","content","setItem"],"mappings":"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","file":"4.239a75dd.js","sourcesContent":["/**\n * DevTool for scms\n * @author ryan.bian\n */\nimport './index.less';\nimport DevTool from './DevTool';\nimport DevMapStore from './DevMapStore';\n\nfunction createDevTool(defaultModuleMap) {\n  const store = new DevMapStore();\n  return new DevTool(store, defaultModuleMap);\n}\n\nexport { createDevTool };\n","/**\n * DevTool Contructor\n * @author ryan.bian\n */\n// http://mayagao.com/static/img/ms_editor.png\n\nclass DevTool {\n  constructor(store, defaultModuleMap) {\n    this.store = store;\n    this.defaultModuleMap = defaultModuleMap;\n    this.root = document.createElement('div');\n    this.root.classList.add('devTool');\n    this.store.read().then(devMap => {\n      this.setup(devMap);\n    });\n    this.state = {\n      active: false,\n    };\n  }\n  setup(devMap) {\n    const editors = Object.keys(this.defaultModuleMap).map(key => {\n      let path = this.defaultModuleMap[key];\n      let checked = false;\n      if (devMap[key]) {\n        path = devMap[key];\n        checked = true;\n      } else {\n      }\n      return `<div class=\"editor-row\">\n          <div class=\"editor-row-check\">\n            <label>\n              <input type=\"checkbox\" ${checked ? 'checked' : ''} />\n              <s></s>\n            </label>\n          </div>\n          <div class=\"editor-row-key\">${key}</div>\n          <div class=\"editor-row-path\">\n            <input name=\"${key}\" type=\"text\" value=\"${path}\" ${\n        checked ? '' : 'disabled'\n      } />\n          </div>\n        </div>`;\n    });\n\n    this.root.innerHTML = `\n      <button class=\"devTool__Toggle\"></button>\n      <div class=\"devTool__EditorWrap\">\n        <div id=\"J_DevTool_editor\" class=\"devTool__Editor\">${editors.join(\n          ''\n        )}</div>\n        <div class=\"devTool__actions\">\n          <button type=\"button\" class=\"devTool__ActionButton devTool__ActionButton--confirm\">确定</button>\n          <button type=\"button\" class=\"devTool__ActionButton devTool__ActionButton--reset\">重置</button>\n          <button type=\"button\" class=\"devTool__ActionButton devTool__ActionButton--exit\">退出</button>\n        </div>\n      </div>\n    `;\n    this.attachToDom();\n    this.initEvent();\n    this.editor = this.root.querySelector('.devTool__Editor');\n  }\n  _updateState() {\n    if (this.state.active) {\n      this.root.classList.add(`devTool--active`);\n    } else {\n      this.root.classList.remove(`devTool--active`);\n    }\n  }\n  initEvent() {\n    this.root.querySelector('.devTool__Toggle').addEventListener(\n      'click',\n      () => {\n        this.state.active = !this.state.active;\n        this._updateState();\n      },\n      false\n    );\n    this.root.querySelector('.devTool__ActionButton--confirm').addEventListener(\n      'click',\n      () => {\n        this.submitDevMap();\n      },\n      false\n    );\n    this.root.querySelector('.devTool__ActionButton--reset').addEventListener(\n      'click',\n      () => {\n        this.resetDevMap();\n      },\n      false\n    );\n    this.root.querySelector('.devTool__ActionButton--exit').addEventListener(\n      'click',\n      () => {\n        this.exitDevMode();\n      },\n      false\n    );\n    document.querySelector('#J_DevTool_editor').addEventListener(\n      'click',\n      e => {\n        const target = e.target;\n        if (\n          target.tagName.toLowerCase() === 'input' &&\n          target.type === 'checkbox'\n        ) {\n          const row = target.parentElement.parentElement.parentElement;\n          const checked = target.checked;\n          const textField = row.querySelector('input[type=\"text\"]');\n          textField.disabled = !checked ? 'disabled' : '';\n        }\n      },\n      false\n    );\n  }\n  attachToDom() {\n    document.body.appendChild(this.root);\n  }\n  submitDevMap() {\n    const fields = this.root.querySelectorAll('input[type=\"text\"]');\n    const map = {};\n    [].forEach.call(fields, field => {\n      if (!field.disabled) {\n        Object.assign(map, {\n          [field.name]: field.value,\n        });\n      }\n    });\n    this.saveMapToDB(map);\n  }\n  resetDevMap() {\n    this.saveMapToDB({});\n  }\n  saveMapToDB(map) {\n    this.store\n      .write(map)\n      .then(() => {\n        history.replaceState(null, null, `?debug=true${location.hash}`);\n        window.location.reload();\n      })\n      .catch(err => {\n        console.warn('[DevTool Error]: Save Map failed!', err);\n        console.warn('[Error Context]:', map);\n      });\n  }\n  exitDevMode() {\n    history.pushState(null, null, `?${location.hash}`);\n    window.location.reload();\n  }\n}\n\nexport default DevTool;\n","/**\n * dev map store constructor\n */\nimport localforage from 'localforage';\nimport isObject from 'lodash/isObject';\nconst GLOBAL_DEV_MAP_STORE = 'GLOBAL_DEV_MAP_STORE';\nlocalforage.config({\n  name: 'SCMS_DEV_TOOL',\n});\n\nclass DevMapStore {\n  async read() {\n    let map;\n    try {\n      map = await localforage.getItem(GLOBAL_DEV_MAP_STORE);\n    } catch(err) {\n      console.warn('[DevTool Error]: read store failed!', err);\n    }\n    return map || {};\n  }\n  write(content) {\n    return localforage.setItem(GLOBAL_DEV_MAP_STORE, content)\n  }\n}\n\nexport default DevMapStore;"],"sourceRoot":""}